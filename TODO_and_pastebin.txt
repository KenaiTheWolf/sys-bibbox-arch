user based deletion of instances:
    - demo users: 
        - max. 3 instances
    - standard users:
        - can only delete own instances
    - admin users:
        - can see syslogs

add keycloak.md to readthedocs:
    - https://github.com/bibbox/bibbox-documentation


Fix syncAppCatalogue:
    -- add expiration time to celery task 

Protect backend with keycloak
    - todo
    - can be disabled in keycloak admin panel for debugging purposes




------------------------- PASTEBIN


initial access token
eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJkNzU5NmI1Zi05ZjkyLTQyYzItOGZjYy1hMmQ2ZTYyYzZiY2MifQ.eyJleHAiOjE3MDk4MTA5MjUsImlhdCI6MTY3ODI3NDkyNSwianRpIjoiNjUwZjBlYjgtYWViMi00NTQxLWJhNzUtZWI2MjkxODcxNDhkIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDE0L2F1dGgvcmVhbG1zL3N5cy1iaWJib3giLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjUwMTQvYXV0aC9yZWFsbXMvc3lzLWJpYmJveCIsInR5cCI6IkluaXRpYWxBY2Nlc3NUb2tlbiJ9.j4-ylrnQy37PvmEZEzHuI5OvQBlVv1QiKQfGJ-pqYks


todo: 
1) add time of installation to instances
    - demo instances should be deleted after [x] days: enable or disable via keycloak?

        maybe periodic celery task?
        - https://docs.celeryproject.org/en/stable/userguide/periodic-tasks.html

    - deleting a keycloak user should delete associated instances
        - get user_id from keycloak database:
            "select user_id from public.credential"


2) move keycloak database to own postgresql docker container
3) add keycloak to backend


------------------------------------- periodictasks dump --------------------------
@app_celerey.on_after_configure.connect
def setup_periodic_tasks(sender, **kwargs):
    # Calls syncAppCatalogue every 60 seconds.
    sender.add_periodic_task(600.0, syncAppCatalogue.s(['bibbox']), name='sync app catalogue every 600 seconds')

    sender.add_periodic_task(10, dummy_task.s(), name='dummy task every 10 seconds')


@app_celerey.task(name='tasks.dummy_task')
def dummy_task():
    print('Dummy task executed')


@app_celerey.task(name='tasks.delete_orphaned_instances')
def delete_orphaned_instances():
    """
    Queries the keycloak user database for the id of all users and deletes all instances where the instance.installed_by_id does not match any of the user ids.
    """

    # get all userID's from keycloak
    userIDs = []

    # get all instances from
    fh = FileHandler()
    instances = fh.getInstancesJSONFile()

    for instance in instances:
        if instance['installed_by_id'] not in userIDs:
            deleteInstance(instance['instancename'])